// Contract for doing experiments in one biome.
//   Author: nightingale

CONTRACT_TYPE
{
    name = KSO_BiomeSurvey
    group = KSO

    title = Find the coldest place to go to!
    description = We decided that it is time to break the boundaries and go to the expedition. In order our scientists won't give up 
    work and just lay the whole day sunbathing
    we decided to send them to the coldest place possible. Unfortunately as we have absolutely no data on our home planet, we do not 
    know, where it is...
    
    Your mission is to overfly at least 5 different biomes including deserts and polar ice caps and collect temperature scans. 
    The problem is, the government haven't delegeted any money for that work,
    So we are very limited in funds. Therefore you must do it in one flight.
    
    completedMessage = KSO Scientists are very disappointed that the coldes place is actually not on shores or deserts..



	
	completedMessage = Congratulations! This flight lasted for 17 days and set the record for duration in space. The mission paved the way for the Salyut space station missions, investigating the effects of long-term weightlessness on crew, and evaluating the work that the cosmonauts could do in orbit, individually and as a team.
	
	minExpiry = 0
	maxExpiry = 0
	maxCompletions = 1
	
	cancellable = false
	declinable = yes
    maxSimultaneous = 1
    Prestige = Trivial
    
    // Always offered by the Field Research Team
    agent = Kerbin exploration

    
    // Contract rewards
    advanceFunds = 7000
    rewardFunds = Random(25000.0, 35000.0)
    rewardReputation = Random(2.0, 5.0)
    rewardScience = Random (5.0, 10.0)


//list of all possible experiments
// DANGER AREA-I don't know what i'm doing   
    
    
    DATA
    {
        type = list <Biome>
        hidden = true
        biome3 = HomeWorld().Biomes().Where(b => b.Biomes() != "Poles" && b.Biomes() != "Deserts").SelectUnique(3)
        biometostudy = [@biome3 , "Poles", "Deserts"]
    }


//что надо сделать
//Aircraft
   	PARAMETER
	{
		name = VesselParameterGroup
		type = VesselParameterGroup
		title = Your aircraft must
		
		define = @/craft
		dissassociateVesselsOnContractCompletion = true

		PARAMETER
		{
			name = HasCrew
			type = HasCrew
			title = have a certified pilot
			
			trait = Pilot
			minCrew = 1
		
			disableOnStateChange = false
			hideChildren = true

		}
		
//Fly and collect

	PARAMETER
	{
		name = Fly
		type = VesselParameterGroup
		title = Fly low over biomes
		vessel = @/craft
		
		PARAMETER
		{			            
			name = ReachState   
			type = ReachState

			situation = FlyinfLow
			
			disableOnStateChange = false
			hideChildren = false
			
		}
		
		PARAMETER
        {
            Name = Measure Temperature
            type = CollectScience
            experiment = temperatureScan
            recoveryMethod = RecoverOrTransmit
            ITERATOR
            {
                type = Biome
                biome = @/biometostudy
            }
        }
    }
    
//Recovery Parameter - Craft & Kerbal Safety Check
	PARAMETER
	{
		name = All
		type = All
		title = safely
		
		PARAMETER
		{
			name = VesselNotDestroyed
			type = VesselNotDestroyed
			title = without destroying your aircraft
			
			vessel = @/craft

		}
		
		PARAMETER
		{
			name = KerbalDeaths
			type = KerbalDeaths
			title = or killing anyone
			
			vessel = @/craft

		}
		
		completeInSequence = true
		disableOnStateChange = true
		
	}
	
